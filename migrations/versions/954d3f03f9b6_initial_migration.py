"""Initial migration

Revision ID: 954d3f03f9b6
Revises: 
Create Date: 2020-12-30 17:37:36.224796

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '954d3f03f9b6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('itnews',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('article_link', sa.String(), nullable=False),
    sa.Column('photo_link', sa.String(), nullable=False),
    sa.Column('published_time', sa.DateTime(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jobsalaries',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('lower_quartile', sa.Integer(), nullable=False),
    sa.Column('median_salary', sa.Integer(), nullable=False),
    sa.Column('upper_quartile', sa.Integer(), nullable=False),
    sa.Column('average_years_experience', sa.Float(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('dob', sa.DateTime(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('mobile', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('country', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('username'),
    sa.UniqueConstraint('email')
    )
    op.create_table('certifications',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('cert_name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('issuer', sa.String(), nullable=False),
    sa.Column('date_obtained', sa.DateTime(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['username'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('connections',
    sa.Column('username_of_requester', sa.String(), nullable=False),
    sa.Column('username_of_confirmer', sa.String(), nullable=False),
    sa.Column('user_1_approved', sa.Boolean(), nullable=True),
    sa.Column('user_2_approved', sa.Boolean(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.CheckConstraint('username_of_requester != username_of_confirmer'),
    sa.ForeignKeyConstraint(['username_of_confirmer'], ['users.username'], ),
    sa.ForeignKeyConstraint(['username_of_requester'], ['users.username'], ),
    sa.PrimaryKeyConstraint('username_of_requester', 'username_of_confirmer')
    )
    op.create_table('meetings',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('time_start', sa.DateTime(), nullable=True),
    sa.Column('time_end', sa.DateTime(), nullable=True),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('subject', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['username'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username_of_sender', sa.String(), nullable=True),
    sa.Column('username_of_receiver', sa.String(), nullable=True),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('read', sa.Boolean(), nullable=True),
    sa.Column('liked', sa.Boolean(), nullable=True),
    sa.Column('sent_time', sa.DateTime(), nullable=True),
    sa.CheckConstraint('username_of_sender != username_of_receiver'),
    sa.ForeignKeyConstraint(['username_of_receiver'], ['users.username'], ),
    sa.ForeignKeyConstraint(['username_of_sender'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('posts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('likes', sa.Integer(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['username'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('resumeprojects',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('resume_path', sa.String(), nullable=False),
    sa.Column('github_account', sa.String(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['username'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('studyhistorys',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('qualification_title', sa.String(), nullable=False),
    sa.Column('institution', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('country', sa.String(), nullable=False),
    sa.Column('date_start', sa.DateTime(), nullable=False),
    sa.Column('date_end', sa.DateTime(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['username'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workhistorys',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('job_title', sa.String(), nullable=False),
    sa.Column('company', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('country', sa.String(), nullable=False),
    sa.Column('date_start', sa.DateTime(), nullable=False),
    sa.Column('date_end', sa.DateTime(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['username'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('likes',
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('username_of_liker', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['username_of_liker'], ['users.username'], ),
    sa.PrimaryKeyConstraint('post_id', 'username_of_liker')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('likes')
    op.drop_table('workhistorys')
    op.drop_table('studyhistorys')
    op.drop_table('resumeprojects')
    op.drop_table('posts')
    op.drop_table('messages')
    op.drop_table('meetings')
    op.drop_table('connections')
    op.drop_table('certifications')
    op.drop_table('users')
    op.drop_table('jobsalaries')
    op.drop_table('itnews')
    # ### end Alembic commands ###
